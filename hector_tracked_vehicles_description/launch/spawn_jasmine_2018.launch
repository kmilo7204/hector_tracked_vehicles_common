<?xml version="1.0"?>


<launch>
    <param name="use_sim_time" value="true" />
    
    <arg name="spawn_x_pos" default="0.5" />
    <arg name="spawn_y_pos" default="0" />
    <arg name="spawn_z_pos" default="0.4" />
    <arg name="spawn_roll" default="0.0" />
    <arg name="spawn_pitch" default="0.0" />    
    <arg name="spawn_yaw"   default="0.0" />

    <!-- send the robot XML to param server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find hector_tracked_vehicles_description)/urdf/jasmine_2018_ugv.urdf.xacro'" />

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
      args="-param robot_description
            -urdf
            -x $(arg spawn_x_pos)
            -y $(arg spawn_y_pos)
            -z $(arg spawn_z_pos)
            -R $(arg spawn_roll)
            -P $(arg spawn_pitch)  
            -Y $(arg spawn_yaw)
            -J arm_yaw_joint 1.57
            -J arm_pitch_joint_0 1.57
            -J arm_pitch_joint_1 -1.57
            -model robot_description"
      respawn="false" output="screen" />

    <!-- start robot state publisher -->

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" type="string" value="" />
    </node>
    


  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find hector_tracked_vehicles_description)/config/jasmine_ugv_2018_gazebo_ros_controllers.yaml" command="load"/>
  
  <!-- Set the gains used by the mimic joint gazebo plugin  -->
  <param name="//gazebo_ros_control/pid_gains/gripper_finger_joint_0/p" value="6"/>
  <param name="//gazebo_ros_control/pid_gains/gripper_finger_joint_0/i" value="0"/>
  <param name="//gazebo_ros_control/pid_gains/gripper_finger_joint_0/d" value="0.001"/>
  <param name="//gazebo_ros_control/pid_gains/gripper_finger_joint_1/p" value="6"/>
  <param name="//gazebo_ros_control/pid_gains/gripper_finger_joint_1/i" value="0"/>
  <param name="//gazebo_ros_control/pid_gains/gripper_finger_joint_1/d" value="0.001"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" ns="sensor_head_control"
        args="joint_state_controller sensor_head_traj_controller"/>

  
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" ns="spin_lidar_control"
        args="joint_state_controller spin_lidar_spin_joint_velocity_controller"/>
  
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" ns="manipulator_arm_control"
        args="joint_state_controller manipulator_arm_traj_controller gripper_traj_controller"/>
<!--  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true"
        output="screen" ns="gripper_control"
        args="joint_state_controller gripper_traj_controller"/>-->
  
  <node pkg="topic_tools" type="relay" name="relay_joint_states_sensor_head" args="/sensor_head_control/joint_states /joint_states" />
  <node pkg="topic_tools" type="relay" name="relay_joint_states_spin_lidar" args="/spin_lidar_control/joint_states /joint_states" />
  <node pkg="topic_tools" type="relay" name="relay_joint_states_manipulator_arm" args="/manipulator_arm_control/joint_states /joint_states" />
<!--   <node pkg="topic_tools" type="relay" name="relay_joint_states_gripper" args="/gripper_control/joint_states /joint_states" /> -->


    <!--Spin up LIDAR-->
  <node pkg="rostopic" type="rostopic" name="lidar_spin_command_pub" args="pub /spin_lidar_control/spin_lidar_spin_joint_velocity_controller/command std_msgs/Float64 3.14 -r 1" />
  
  
    <!--Nodelet managers for zoom and thermal cam. Started as part of bringup on real robot. See #882 -->
  <node pkg="nodelet" type="nodelet" name="arm_zoom_cam_nodelet_manager" args="manager" output="screen" respawn="true"/>
  
  <group ns="arm_rgbd_cam">
    <node pkg="nodelet" type="nodelet" name="arm_rgbd_cam_nodelet_manager" args="manager" output="screen"/>
  </group> 
  
  <node pkg="nodelet" type="nodelet" name="arm_thermal_cam_nodelet_manager" args="manager" output="screen" respawn="true"/>
  <node pkg="nodelet" type="nodelet" name="velodyne_nodelet_manager" args="manager" output="screen" respawn="true"/>
  <node pkg="nodelet" type="nodelet" name="ricoh_theta_nodelet_manager" args="manager" output="screen" respawn="true"/>
  <node pkg="nodelet" type="nodelet" name="camera360_nodelet_manager" args="manager" output="screen" respawn="true"/>
  
    <!--Required as Realsense driver publishes tf directly-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_rgb_frame_pub" args="0 0 0 0 0 0  /arm_rgbd_cam_link /arm_rgbd_cam_rgb_frame" /> 
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_depth_frame_pub" args="0 0 0 0 0 0  /arm_rgbd_cam_link /arm_rgbd_cam_depth_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_depth_optical_frame_pub" args="0 0 0 -1.57 0 -1.57 /arm_rgbd_cam_depth_frame /arm_rgbd_cam_depth_optical_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_depth__optical_frame_pub" args="0 0 0 -1.57 0 -1.57 /arm_rgbd_cam_depth_frame /arm_rgbd_cam_depth_optical_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_rgb_optical_frame_pub" args="0 0 0 0 0 0 arm_rgbd_cam_depth_optical_frame arm_rgbd_cam_rgb_optical_frame" />
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_d435_rgb_frame_pub" args="0 0 0 0 0 0  /manipulation_rgbd_cam_link /manipulation_rgbd_cam_rgb_frame" /> 
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_d435_depth_frame_pub" args="0 0 0 0 0 0  /manipulation_rgbd_cam_link /manipulation_rgbd_cam_depth_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_d435_depth_optical_frame_pub" args="0 0 0 -1.571 0 -1.571 /manipulation_rgbd_cam_depth_frame /manipulation_rgbd_cam_depth_optical_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="realsense_d435_rgb_optical_frame_pub" args="0 0 0 0 0 0 /manipulation_rgbd_cam_depth_optical_frame /manipulation_rgbd_cam_rgb_optical_frame" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <!--  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
  respawn="false" output="screen">
  <remap from="/joint_states" to="/rrbot/joint_states" />
  </node>-->
    
<!--    <include file="$(find hector_imu_attitude_to_tf)/launch/example.launch" />-->

<!--    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="true" output="screen" >-->
<!--      <param name="odom_frame_id" value="odom"/>-->
<!--    </node>-->
</launch>
